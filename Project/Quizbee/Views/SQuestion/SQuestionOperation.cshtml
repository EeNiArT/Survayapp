@model Quizbee.ViewModels.SQuestionViewModel
@{
    ViewBag.Title = Model.PageInfo.PageTitle;

    var formAction = Model.ID > 0 ? Url.ModifySQuestion(Model.SurveyID, Model.ID) : Url.AddSQuestion(Model.SurveyID);
    var boop = 2;
}
<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav nav-tabs card-header-tabs">
                        <li class="nav-item">
                            <a class="nav-link" href="@Url.SQuestionsList(Model.SurveyID)"><i class="fas fa-clipboard-list"></i>&nbsp;Questions</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="#">
                                @if (Model.ID > 0)
                                {
                                    <i class="fas fa-save"></i>
                                }
                                else
                                {
                                    <i class="fas fa-plus"></i>
                                }
                                &nbsp;@Model.PageInfo.PageTitle
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <form role="form" id="operationForm" method="post" action="@formAction">
                        @if (Model.ID > 0)
                        {
                            <input type="hidden" id="ID" name="ID" value="@Model.ID" />
                        }
                        <input type="hidden" id="QuizID" name="QuizID" value="@Model.SurveyID" />
                        <div class="form-group">
                            <label for="Title">Question Title</label>
                            <input class="form-control" type="text" id="Title" name="Title" value="@Model.Title" placeholder="Enter question title">
                            @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Title"] != null && ViewData.ModelState["Title"].Errors.Count > 0)
                            {
                                <div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">×</span>
                                    </button>
                                    <i class="mdi mdi-alert"></i>
                                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "tx-danger" })
                                </div>
                            }
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["TypeOfQuestion"] != null && ViewData.ModelState["TypeOfQuestion"].Errors.Count > 0)
                                {
                                    <div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                        <i class="mdi mdi-alert"></i>
                                        @Html.ValidationMessageFor(m => m.TypeOfQuestion, "", new { @class = "tx-danger" })
                                    </div>
                                }
                                <div id="blockanstyperadio" class="form-group">
                                    @Html.Partial("~/Views/Partials/Radio.cshtml")
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div id="blocksmilies" style="display:none" class="form-group">
                                    @Html.Partial("~/Views/Partials/Smileys.cshtml")
                                </div>
                                <div id="blockstarratting" style="display:none" class="form-group">
                                    @Html.Partial("~/Views/Partials/Starsratting.cshtml")
                                </div>
                                <div id="blockopenanswer" style="display:none" class="form-group">
                                    @Html.Partial("~/Views/Partials/TextBox.cshtml")
                                </div>

                                <div id="blockmultiplechoice" style="display:none" class="form-group">
                                    <label for="CorrectOption">Correct Option</label>
                                    @{
                                        var correctOptionValue = Model.CorrectOption != null ? Model.CorrectOption.Answer : "";
                                    }
                                    <input class="form-control" type="text" id="CorrectOption" name="CorrectOption" value="@correctOptionValue" placeholder="Enter Correct Option">
                                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["CorrectOption"] != null && ViewData.ModelState["CorrectOption"].Errors.Count > 0)
                                    {
                                        <div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true">×</span>
                                            </button>
                                            <i class="mdi mdi-alert"></i>
                                            @Html.ValidationMessageFor(m => m.CorrectOption, "", new { @class = "tx-danger" })
                                        </div>
                                    }
                                    @if (Model.Options != null)
                                    {
                                        foreach (var option in Model.Options)
                                        {
                                            <div class="option form-group">
                                                <label><span name="optionNoText">Option @(Model.Options.IndexOf(option) + 2)</span></label>
                                                <input class="form-control" type="text" name="optionNo@(Model.Options.IndexOf(option) + 2)" placeholder="Enter Option" value="@option.Answer">
                                            </div>
                                        }
                                    }
                                    <span id="options"></span>
                                    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Options"] != null && ViewData.ModelState["Options"].Errors.Count > 0)
                                    {
                                        <div class="m-t-10 alert alert-icon alert-warning alert-dismissible" role="alert">
                                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                <span aria-hidden="true">×</span>
                                            </button>
                                            <i class="mdi mdi-alert"></i>
                                            @Html.ValidationMessageFor(m => m.Options, "", new { @class = "tx-danger" })
                                        </div>
                                    }
                                </div>
                                <div id="actionsRow">
                                    <hr />
                                    <button type="button" disabled="true" id="addOptionButton" class="btn btn-info waves-effect waves-light w-md"><i class="fas fa-plus mg-r-10"></i>&nbsp;Add Option</button>
                                    @if (Model.ID > 0)
                                    {
                                        <button type="submit" id="updateButton" class="btn btn-warning"><i class="fas fa-save mg-r-10"></i>&nbsp;Update this Question and Go Back</button>
                                        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete this Question</button>
                                    }
                                    else
                                    {
                                        <button type="submit" id="addButton" class="btn btn-success waves-effect waves-light w-md"><i class="fas fa-save mg-r-10"></i>&nbsp;Save this Question and Add Another</button>
                                    }
                                    <a href="@Url.SQuestionsList(Model.SurveyID)" role="button" class="btn btn-primary waves-effect waves-light w-md"><i class="fas fa-times mg-r-10"></i>&nbsp;Cancel and Go Back</a>
                                </div>

                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="deleteModal" class="modal fade">
    <div class="modal-dialog" role="document">
        <div class="modal-content tx-size-sm">
            <div class="modal-body tx-center pd-y-20 pd-x-20">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <i class="icon icon ion-android-warning tx-100 tx-warning lh-1 mg-t-20 d-inline-block"></i>
                <h4 class="tx-warning tx-semibold mg-b-20">Warning!</h4>
                <p class="mg-b-20 mg-x-20">Are you sure you want to delete this record? This will not be reversible.</p>
                <button type="button" id="deleteButton" class="btn btn-danger mg-b-20" data-toggle="modal" data-dismiss="modal"><i class="fas fa-trash-alt mg-r-10"></i>&nbsp;Delete</button>
                <button type="button" class="btn btn-primary mg-b-20" data-toggle="modal" data-dismiss="modal"><i class="fas fa-times mg-r-10"></i>&nbsp;Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class="optionRowTemplate" style="display:none">
    <label><span name="optionNoText"></span></label>
    <input class="form-control" type="text" name="optionNo" placeholder="Enter Option">
</div>
<script>
    $(document).ready(function () {
        $("#addOptionButton").click(function () {
            $('<div/>', {
                'class': 'option form-group', html: GetHtml()
            }).hide().insertBefore('#options').slideDown('slow');
        });

        function GetHtml() {
            var len = $('.option').length + 2;
            var $html = $('.optionRowTemplate').clone();
            $html.find('[name=optionNoText]')[0].innerHTML = "Option " + len;
            $html.find('[name=optionNo]')[0].name = "optionNo" + len;
            return $html.html();
        }

        $("#updateButton").click(function () {
            $("#operationForm").attr("action", "@Url.UpdateSQuestion(Model.SurveyID, Model.ID)");
            $("#operationForm").submit();
        });
        $("#deleteButton").click(function () {
            $("#operationForm").attr("action", "@Url.DeleteSQuestion(Model.SurveyID, Model.ID)");
            $("#operationForm").submit();
        });


        var labl = $("input:checked").parent().children()[1];
        if (labl != null) {
            var lblfor = $(labl)[0].attributes[1].value;

            dfddfdfg(lblfor);
        }


        $(".labely").click(function (e) {
            //alert("Handler for .click() called.");

            dfddfdfg(this.htmlFor);


        });


    });

    function dfddfdfg(e) {

        debugger;

        if (e == "afradiomc") {
            $("#blocksmilies").css("display", "none");
            $("#blockstarratting").css("display", "none");
            $("#blockopenanswer").css("display", "none");
            $("#blockmultiplechoice").css("display", "block");

            $('#addOptionButton').prop('disabled', false);

        } else if (e == "afradiosc") {
            $("#blocksmilies").css("display", "block");
            $("#blockstarratting").css("display", "none");
            $("#blockopenanswer").css("display", "none");
            $("#blockmultiplechoice").css("display", "none");
            $('#addOptionButton').prop('disabled', true);

        } else if (e == "afradiolc") {
            $("#blocksmilies").css("display", "none");
            $("#blockstarratting").css("display", "block");
            $("#blockopenanswer").css("display", "none");
            $("#blockmultiplechoice").css("display", "none");
            $('#addOptionButton').prop('disabled', true);
        } else if (e == "afradiooc") {
            $("#blocksmilies").css("display", "none");
            $("#blockstarratting").css("display", "none");
            $("#blockopenanswer").css("display", "block");
            $("#blockmultiplechoice").css("display", "none");
            $('#addOptionButton').prop('disabled', true);
        } else {
            $("#blocksmilies").css("display", "none");
            $("#blockstarratting").css("display", "none");
            $("#blockopenanswer").css("display", "none");
            $("#blockmultiplechoice").css("display", "none");
        }
    }

</script>
